plugins {
    id 'java'
    id("io.papermc.paperweight.userdev") version "2.0.0-beta.14"
    id 'de.eldoria.plugin-yml.paper' version '0.7.0'
    id 'xyz.jpenilla.run-paper' version "2.3.1"
}

group = 'dev.slne.surf.serverbrandcustomizer'
version = '1.21.4-1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { url = "https://repo.codemc.io/repository/maven-releases/" }
    maven { url = "https://repo.codemc.io/repository/maven-snapshots/" }
}

dependencies {
    paperweightDevelopmentBundle('io.papermc.paper:dev-bundle:1.21.4-R0.1-SNAPSHOT')
    paperLibrary 'com.github.retrooper:packetevents-spigot:2.7.0'
}

paper {
    main = 'dev.slne.surf.serverbrandcustomizer.SurfServerbrandCustomizer'
    loader = 'dev.slne.surf.serverbrandcustomizer.SurfServerbrandCustomizerLoader'
    apiVersion = '1.21'
    authors = ['twisti']
    contributors = ['red', 'keviro']
    description = 'Customize the server brand displayed to the player in the F3 menu'
    generateLibrariesJson = true

    serverDependencies {
        'ProtocolLib' {
            required = false
            load = 'BEFORE'
        }
        'ProtocolSupport' {
            required = false
            load = 'BEFORE'
        }
        'ViaVersion' {
            required = false
            load = 'BEFORE'
        }
        'ViaBackwards' {
            required = false
            load = 'BEFORE'
        }
        'ViaRewind' {
            required = false
            load = 'BEFORE'
        }
        'Geyser-Spigot' {
            required = false
            load = 'BEFORE'
        }
    }
}

tasks {
    runServer {
        minecraftVersion('1.21.4')
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}